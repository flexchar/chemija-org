---
import type { ArticleQueryResult } from '@/types/sanity.types';
import { urlFor } from '../utils/image';
import { formatDate } from '../utils/index';
import { toPlainText } from 'astro-portabletext';

interface Props {
    article: NonNullable<ArticleQueryResult>;
}

const { article } = Astro.props;

// We need to augment the Article type to match what's returned from the GROQ query
type ExtendedCategory = {
    _id: string;
    title: string;
};

// Cast categories to the extended type that includes title
const categories = article.categories as unknown as
    | ExtendedCategory[]
    | undefined;
---

<div
    class="card bg-base-200 shadow-sm hover:shadow-xl transition-all duration-200"
>
    <a href={`/${article.slug?.current}`} class="block h-full">
        {
            article.mainImage && article.mainImage.asset && (
                <figure class="h-48">
                    <img
                        src={urlFor(article.mainImage.asset)
                            .width(400)
                            .height(300)
                            .url()}
                        alt={article.title || 'Straipsnio nuotrauka'}
                        class="w-full h-full object-cover"
                        loading="lazy"
                    />
                </figure>
            )
        }

        <div class="card-body p-4 h-full">
            {
                categories && categories.length > 0 && (
                    <div class="badge badge-primary badge-sm mb-2">
                        {categories[0].title}
                    </div>
                )
            }

            <h2 class="card-title text-lg line-clamp-2">{article.title}</h2>

            <p class="text-sm text-base-content/70 mb-3">
                {toPlainText(article.body!).slice(0, 225).trim()}...
            </p>

            <span class="flex-1"></span>

            <div
                class="card-actions flex justify-between text-xs text-base-content/60 mt-auto"
            >
                <span class="flex items-center gap-1">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="16"
                        height="16"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                    >
                        <path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z"
                        ></path>
                        <circle cx="12" cy="12" r="3"></circle>
                    </svg>
                    {article.views || 0}
                </span>

                <time datetime={article._createdAt}>
                    {formatDate(article._createdAt)}
                </time>
            </div>
        </div>
    </a>
</div>
