---
import Layout from '@/layouts/Layout.astro';
import ArticleCard from '@/components/ArticleCard.astro';
import { getArticles, getArticlesCount } from '@/utils/sanity';

export async function getStaticPaths() {
    const limit = 20;
    const totalArticles = await getArticlesCount();
    const totalPages = Math.ceil(totalArticles / limit);

    // Generate paths for pages 2 through totalPages
    const paths = [];
    for (let i = 2; i <= totalPages; i++) {
        const offset = (i - 1) * limit;
        console.log('offset', { offset, limit, i });
        const articles = await getArticles(limit, offset);
        paths.push({
            params: { page: i.toString() },
            props: { articles, currentPage: i, totalPages },
        });
    }

    console.log('paths', paths);
    return paths;
}

const { page } = Astro.params;
const { articles, currentPage, totalPages } = Astro.props;
const limit = 20; // Needed for pagination calculation consistency

// --- Pagination Logic (Adapated from original straipsniai.astro) ---
const paginationItems = [];
if (totalPages <= 5) {
    // For 5 or fewer pages, show all
    for (let i = 1; i <= totalPages; i++) {
        paginationItems.push(i);
    }
} else if (currentPage <= 3) {
    // For first few pages (adjusted for current page)
    paginationItems.push(1, 2, 3, 4, 5);
} else if (currentPage >= totalPages - 2) {
    // For last few pages
    for (let i = totalPages - 4; i <= totalPages; i++) {
        paginationItems.push(i);
    }
} else {
    // For middle pages
    for (let i = currentPage - 2; i <= currentPage + 2; i++) {
        paginationItems.push(i);
    }
}
---

<Layout title={`Straipsniai - Puslapis ${currentPage}`}>
    <div class="container mx-auto px-4 py-8">
        <header class="mb-8">
            <h1 class="text-3xl font-bold">Straipsniai</h1>
            <p class="text-sm text-base-content/70">Puslapis {currentPage}</p>
        </header>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {articles.map((article) => <ArticleCard article={article} />)}
        </div>

        {
            totalPages > 1 && (
                <div class="pagination flex justify-center items-center gap-2 mt-10">
                    {currentPage > 1 && (
                        <a href={`/straipsniai`} class="btn btn-sm">
                            «
                        </a>
                    )}

                    {currentPage > 1 && (
                        <a
                            href={
                                currentPage === 2
                                    ? `/straipsniai`
                                    : `/straipsniai/${currentPage - 1}`
                            }
                            class="btn btn-sm"
                        >
                            ‹
                        </a>
                    )}

                    {paginationItems.map((pageNum) => (
                        <a
                            href={
                                pageNum === 1
                                    ? `/straipsniai`
                                    : `/straipsniai/${pageNum}`
                            }
                            class:list={[
                                'btn',
                                'btn-sm',
                                pageNum === currentPage ? 'btn-primary' : '',
                            ]}
                        >
                            {pageNum}
                        </a>
                    ))}

                    {currentPage < totalPages && (
                        <a
                            href={`/straipsniai/${currentPage + 1}`}
                            class="btn btn-sm"
                        >
                            ›
                        </a>
                    )}

                    {currentPage < totalPages && (
                        <a
                            href={`/straipsniai/${totalPages}`}
                            class="btn btn-sm"
                        >
                            »
                        </a>
                    )}
                </div>
            )
        }
    </div>
</Layout>
