---
import Layout from '@/layouts/Layout.astro';
import ArticleCard from '@/components/ArticleCard.astro';
import { getArticles, getArticlesCount } from '@/utils/sanity';

// --- Page 1 Specific Logic ---
const page = 1; // This page always represents page 1
const limit = 20;
const offset = 0; // Always fetch the first set of articles

// Fetch articles for the first page
const articles = await getArticles(limit, offset);

// Get total count of articles for pagination calculation
const totalArticles = await getArticlesCount();
const totalPages = Math.ceil(totalArticles / limit);

// --- Pagination Logic (Remains largely the same, but link generation changes) ---
const paginationItems = [];
if (totalPages <= 5) {
    for (let i = 1; i <= totalPages; i++) {
        paginationItems.push(i);
    }
} else {
    // Always show the first 5 pages when on page 1
    paginationItems.push(1, 2, 3, 4, 5);
}
// Note: The logic for 'middle' and 'last few pages' isn't needed here
// because this file *only* handles page 1.
// The dynamic route [page].astro will handle those cases.
---

<Layout title="Straipsniai">
    <div class="container mx-auto px-4 py-8">
        <header class="mb-8">
            <h1 class="text-3xl font-bold">Straipsniai</h1>
        </header>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {articles.map((article) => <ArticleCard article={article} />)}
        </div>

        {
            totalPages > 1 && (
                <div class="pagination flex justify-center items-center gap-2 mt-10">
                    {/* No previous/first buttons needed on page 1 */}

                    {paginationItems.map((pageNum) => (
                        <a
                            href={pageNum === 1 ? `/straipsniai` : `/straipsniai/${pageNum}`}
                            class={`btn btn-sm ${pageNum === page ? 'btn-primary' : ''}`}
                        >
                            {pageNum}
                        </a>
                    ))}

                    {page < totalPages && (
                        <a
                            href={`/straipsniai/2`} // Next page is always 2 from page 1
                            class="btn btn-sm"
                        >
                            ›
                        </a>
                    )}

                    {page < totalPages && (
                        <a
                            href={`/straipsniai/${totalPages}`}
                            class="btn btn-sm"
                        >
                            »
                        </a>
                    )}
                </div>
            )
        }
    </div>
</Layout>
